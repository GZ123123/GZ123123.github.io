!function(){const t=function(t,e){this.lyric=(t=>{let e=[];t?.split(/[\r\n]/).forEach(t=>{if(/\[([a-z]+):(.*)\].*/.test(t))return;const[,i,n]=/(\[[0-9.:\[\]]*\])+(.*)/.exec(t)||[];i?.replace(/\]\[/g,"],[").split(",").forEach(t=>{const[,i,r]=/\[([0-9]+):([0-9.]+)\]/.exec(t)||[];i&&r&&e.push({starttime:60*parseInt(i,10)+parseFloat(r),line:n})})}),e.sort((t,e)=>t.starttime-e.starttime);for(let t=0;t<e.length;t++)e[t].endtime=e[t+1]?.starttime;return e})(e),this.node=t,this.duration=this.node.duration,this.index=0,"AUDIO"===this.node.nodeName&&(this.node.addEventListener("timeupdate",t=>{const e=t.target.currentTime;t.target.dispatchEvent(new CustomEvent("song-duration",{detail:{duration:this.duration,current:e,percent:Math.min(t.target.currentTime/this.duration*100,100)},bubbles:!0}));const i=this.lyric.findIndex(t=>t.starttime<=e&&t.endtime>=e);this.index!=i&&(t.target.dispatchEvent(new CustomEvent("lyric-update",{detail:{index:i,lyric:this.lyric[i].line}})),this.index=i)}),this.node.addEventListener("durationchange",t=>{this.duration=t.target.duration}))};t.prototype.move=function(t){this.node.currentTime=t*this.duration},t.prototype.play=function(){this.node.play()},t.prototype.pause=function(){this.node.pause()},window.Lyricer=t}();